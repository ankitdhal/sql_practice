CREATE DATABASE DEMO;
USE DEMO;

CREATE OR REPLACE TABLE EMPLOYEE
(
   EMPID INTEGER NOT NULL PRIMARY KEY,
   EMP_NAME VARCHAR2(20),
   JOB_ROLE STRING,
   SALARY NUMBER(10,2)
);

INSERT INTO EMPLOYEE
VALUES(101,'ANAND JHA','Analyst',50000);

INSERT INTO EMPLOYEE
VALUES(102,'ALex', 'Data Engineer',60000);

INSERT INTO EMPLOYEE
VALUES(103,'Ravi', 'Data Scientist',48000);

INSERT INTO EMPLOYEE
VALUES(104,'Peter', 'Analyst',98000);

INSERT INTO EMPLOYEE
VALUES(105,'Pulkit', 'Data Scientist',72000);

INSERT INTO EMPLOYEE
VALUES(106,'Robert','Analyst',100000);

INSERT INTO EMPLOYEE
VALUES(107,'Rishabh','Data Engineer',67000);

INSERT INTO EMPLOYEE
VALUES(108,'Subhash','Manager',148000);

INSERT INTO EMPLOYEE
VALUES(109,'Michaeal','Manager',213000);

INSERT INTO EMPLOYEE
VALUES(110,'Dhruv','Data Scientist',89000);

INSERT INTO EMPLOYEE
VALUES(111,'Amit Sharma','Analyst',72000);


SELECT * FROM EMPLOYEE;


--TOTAL SALARY BASED ON JOB_ROLE
SELECT JOB_ROLE,SUM(SALARY) AS DEE FROM EMPLOYEE
GROUP BY JOB_ROLE;

--EMPLOYEE IN EACH DEPT
SELECT JOB_ROLE, COUNT(EMPID) FROM EMPLOYEE
GROUP BY 1;

--DISPLAY TOTAL SALARY ALONG WITH ALL RECORDS
SELECT * ,SUM(SALARY) OVER() AS TOTAL_SALARY 
FROM EMPLOYEE ;

--DISPLAY MAX SALARY PER JOB ROLE FOR ALL ROWS
SELECT *, MAX(SALARY) OVER(PARTITION BY JOB_ROLE ) AS MAX_SALARY
FROM EMPLOYEE;

SELECT * FROM (SELECT JOB_ROLE,SALARY, RANK() OVER (PARTITION BY JOB_ROLE ORDER BY SALARY DESC) AS RANK 
FROM EMPLOYEE) WHERE RANK=1;

SELECT *, MAX(SALARY) OVER (PARTITION BY JOB_ROLE) AS MAX_SALARY,
MIN(SALARY) OVER (PARTITION BY JOB_ROLE) AS MIN_SALARY,
SUM(SALARY) OVER (PARTITION BY JOB_ROLE) AS TOTAL_SALARY
FROM EMPLOYEE;

SELECT DISTINCT(JOB_ROLE), MAX(SALARY) OVER (PARTITION BY JOB_ROLE) AS MAX_SALARY,
MIN(SALARY) OVER (PARTITION BY JOB_ROLE) AS MIN_SALARY,
SUM(SALARY) OVER (PARTITION BY JOB_ROLE) AS TOTAL_SALARY
FROM EMPLOYEE;

SELECT * FROM(
SELECT *, ROW_NUMBER() OVER(PARTITION BY JOB_ROLE ORDER BY SALARY DESC) AS ROW_NUM 
FROM EMPLOYEE ) WHERE ROW_NUM <=2;

